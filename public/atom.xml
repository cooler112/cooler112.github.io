<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ITCooler</title>
  
  <subtitle>斜杠编程，爱疯爱玩爱烧脑</subtitle>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-01-16T06:34:13.853Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Shawn Xiao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>npm npm link使用方法</title>
    <link href="http://yoursite.com/2021/01/16/npm-npm-link%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2021/01/16/npm-npm-link%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</id>
    <published>2021-01-16T06:10:57.000Z</published>
    <updated>2021-01-16T06:34:13.853Z</updated>
    
    <content type="html"><![CDATA[<p> 初始链接模块修改main文件指向当前运行主文件，不是打包文件目录<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">从dist/index.js改为src/main.js</span><br></pre></td></tr></table></figure></p><ol><li><p>项目和模块在同一个目录下，可以使用相对路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm link ../module</span><br></pre></td></tr></table></figure></li><li><p>项目和模块不在同一个目录下</p></li></ol><p>cd到模块目录，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm link，进行全局link</span><br></pre></td></tr></table></figure><p>cd到项目目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm link 模块名(package.json中的name)</span><br></pre></td></tr></table></figure></p><ol start="3"><li>解除link</li></ol><p>解除项目和模块link，项目目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm unlink 模块名</span><br></pre></td></tr></table></figure></p><p>解除模块全局link，模块目录下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm unlink 模块名</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 初始链接模块修改main文件指向当前运行主文件，不是打包文件目录&lt;br&gt; &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/前端开发/"/>
    
    
    <category term="npm" scheme="http://yoursite.com/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>CSS over-flow的使用</title>
    <link href="http://yoursite.com/2021/01/16/CSS-over-flow%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2021/01/16/CSS-over-flow%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2021-01-16T06:07:59.000Z</published>
    <updated>2021-01-16T06:08:50.451Z</updated>
    
    <content type="html"><![CDATA[<p>当元素溢出内容区，需要使用overflow属性来进行裁剪</p><p>overflow有以下几个可选值：</p><table><thead><tr><th>visible</th><th>默认值。内容不会被修剪，会呈现在元素框之外。</th></tr></thead><tbody><tr><td>hidden</td><td>内容会被修剪，并且其余内容是不可见的。</td></tr><tr><td>scroll</td><td>内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容。</td></tr><tr><td>auto</td><td>如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。</td></tr><tr><td>inherit</td><td>规定应该从父元素继承 overflow 属性的值。</td></tr></tbody></table><p><strong>overflow-X | overflow-y</strong></p><p>　　overflow-x和overflow-y的属性原本是IE浏览器独自拓展的属性，后来被CSS3采用，并标准化。overflow-x主要用来定义对水平方向内容溢出的剪切，而overflow-y主要用来定义对垂直方向内容溢出的剪切</p><p>　　[注意]如果overflow-x和overflow-y值相同则等同于overflow。如果overflow-x和overflow-y值不同，且其中一个值显式设置为visible或未设置默认为visible，而另外一个值是非visible的值。则visible值会被重置为auto</p><p>两个独有的值：</p><p>no-display：如果内容不适合内容框，则删除整个框。</p><p>no-content：如果内容不适合内容框，则隐藏整个内容。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;当元素溢出内容区，需要使用overflow属性来进行裁剪&lt;/p&gt;
&lt;p&gt;overflow有以下几个可选值：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;visible&lt;/th&gt;
&lt;th&gt;默认值。内容不会被修剪，会呈现在元素框之外。&lt;/th&gt;
&lt;/tr&gt;
&lt;/t</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/前端开发/"/>
    
    
    <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>vue-draggable使用</title>
    <link href="http://yoursite.com/2021/01/16/vue-draggable%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2021/01/16/vue-draggable%E4%BD%BF%E7%94%A8/</id>
    <published>2021-01-16T03:23:12.000Z</published>
    <updated>2021-01-16T06:11:48.332Z</updated>
    
    <content type="html"><![CDATA[<p>在Vue业务开发中，会用到功能菜单的位置变换，比如支付宝的菜单换行， 是怎么实现的呢？</p><p>可以直接使用Vue的draggable组件</p><p>安装方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vuedraggable</span><br></pre></td></tr></table></figure><p>页面引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import vuedraggable from &apos;vuedraggable&apos;</span><br><span class="line">......</span><br><span class="line">  components: &#123;</span><br><span class="line">    vuedraggable</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>直接使用,可以在内部添加简单动画</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;vuedraggable </span><br><span class="line">v-model=&quot;menus&quot; </span><br><span class="line">dragable=&quot;true&quot; </span><br><span class="line"> @change=&quot;change&quot;</span><br><span class="line"> @start=&quot;start&quot;</span><br><span class="line"> @end=&quot;end&quot;</span><br><span class="line"> :move=&quot;move&quot;</span><br><span class="line"> :disabled=&quot;isEdit&quot;&gt;</span><br><span class="line">   &lt;transition-group class=&quot;my-func-group&quot;&gt;</span><br><span class="line">     &lt;div</span><br><span class="line">     class=&quot;menu-item menu-item-drag&quot;</span><br><span class="line">     v-for=&quot;item in menus&quot;</span><br><span class="line">     :key=&quot;item.bh&quot;</span><br><span class="line">     &gt;</span><br><span class="line">       &lt;div class=&quot;func-icon-wrapper&quot; @click.stop=&quot;fnClick(item)&quot;&gt;</span><br><span class="line">       &lt;img class=&quot;func-icon&quot; :src=&quot;item.realUrl&quot; /&gt;</span><br><span class="line">     &lt;/div&gt;</span><br><span class="line">     &lt;div class=&quot;menu-text&quot;&gt;&#123;&#123; item.mc &#125;&#125;&lt;/div&gt;</span><br><span class="line">     &lt;/div&gt;</span><br><span class="line">   &lt;/transition-group&gt;</span><br><span class="line"> &lt;/vuedraggable&gt;</span><br></pre></td></tr></table></figure><p>另外切换的元素本身是可以点击的，需要添加@click.stop禁止点击元素向上传递事件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在Vue业务开发中，会用到功能菜单的位置变换，比如支付宝的菜单换行， 是怎么实现的呢？&lt;/p&gt;
&lt;p&gt;可以直接使用Vue的draggable组件&lt;/p&gt;
&lt;p&gt;安装方式：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td </summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/前端开发/"/>
    
    
    <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Mac环境下安装NVM</title>
    <link href="http://yoursite.com/2021/01/10/Mac%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85NVM/"/>
    <id>http://yoursite.com/2021/01/10/Mac%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85NVM/</id>
    <published>2021-01-10T11:45:38.000Z</published>
    <updated>2021-01-10T11:46:59.516Z</updated>
    
    <content type="html"><![CDATA[<p>nvm就是nodejs version management的缩写，用于切换node版本，使用起来非常方便。</p><h4 id="安装-nvm"><a href="#安装-nvm" class="headerlink" title="安装 nvm"></a>安装 nvm</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- <span class="symbol">https:</span>/<span class="regexp">/raw.githubusercontent.com/creationix</span><span class="regexp">/nvm/v</span><span class="number">0</span>.<span class="number">33.8</span>/install.sh <span class="params">| bash</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- <span class="symbol">https:</span>/<span class="regexp">/raw.githubusercontent.com/creationix</span><span class="regexp">/nvm/v</span><span class="number">0</span>.<span class="number">33.8</span>/install.sh <span class="params">| bash</span></span><br></pre></td></tr></table></figure><p>验证安装是否成功</p><p>重新打开终端输入 nvm ，当出现“<code>Node Version Manager</code>”时，说明已安装成功。</p><p><img src="/2021/01/10/Mac环境下安装NVM/image-20210110194349971.png" alt="image-20210110194349971"></p><p>如果在新的终端输入 nvm 时提示：<code>command not found: nvm</code>，有可能是以下原因之一：</p><ul><li>你的系统可能缺少一个 .bash_profile 文件，你可以创建一个此文件（可通过<code>vi</code>或<code>vim</code>命令），打开复制粘贴以下代码（<em>安装nvm成功后终端的最好3行代码</em>）进去，保存，然后再次运行安装命令；</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">"<span class="variable">$HOME</span>/.nvm"</span></span><br><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/nvm.sh"</span>  <span class="comment"># This loads nvm</span></span><br><span class="line">[ -s <span class="string">"<span class="variable">$NVM_DIR</span>/bash_completion"</span> ] &amp;&amp; \. <span class="string">"<span class="variable">$NVM_DIR</span>/bash_completion"</span>  <span class="comment"># This loads nvm bash_completion</span></span><br></pre></td></tr></table></figure><h4 id="nvm-常用命令"><a href="#nvm-常用命令" class="headerlink" title="nvm 常用命令"></a>nvm 常用命令</h4><ul><li><code>nvm install stable</code> ## 安装最新稳定版 node，当前是node v9.5.0 (npm v5.6.0)</li><li><code>nvm install &lt;version&gt;</code> ## 安装指定版本，可模糊安装，如：安装v4.4.0，既可nvm install v4.4.0，又可nvm install 4.4</li><li><code>nvm uninstall &lt;version&gt;</code> ## 删除已安装的指定版本，语法与install类似</li><li><code>nvm use &lt;version&gt;</code> ## 切换使用指定的版本node</li><li><code>nvm ls</code> ## 列出所有安装的版本</li><li><code>nvm ls-remote</code> ## 列出所有远程服务器的版本（官方node version list）</li><li><code>nvm current</code> ## 显示当前的版本</li><li><code>nvm alias &lt;name&gt; &lt;version&gt;</code> ## 给不同的版本号添加别名</li><li><code>nvm unalias &lt;name&gt;</code> ## 删除已定义的别名</li><li><code>nvm reinstall-packages &lt;version&gt;</code> ## 在当前版本 node 环境下，重新全局安装指定版本号的 npm 包</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;nvm就是nodejs version management的缩写，用于切换node版本，使用起来非常方便。&lt;/p&gt;
&lt;h4 id=&quot;安装-nvm&quot;&gt;&lt;a href=&quot;#安装-nvm&quot; class=&quot;headerlink&quot; title=&quot;安装 nvm&quot;&gt;&lt;/a&gt;安装 nvm</summary>
      
    
    
    
    <category term="环境搭建" scheme="http://yoursite.com/categories/环境搭建/"/>
    
    
    <category term="nvm" scheme="http://yoursite.com/tags/nvm/"/>
    
  </entry>
  
  <entry>
    <title>wordpress安装步骤</title>
    <link href="http://yoursite.com/2021/01/10/wordpress%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/"/>
    <id>http://yoursite.com/2021/01/10/wordpress%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/</id>
    <published>2021-01-10T11:19:47.000Z</published>
    <updated>2021-01-10T11:21:00.702Z</updated>
    
    <content type="html"><![CDATA[<p>###安装：<br>相对于自己去配置PHP,MYSQL,及HTTP服务，安装LAMP服务器系统（Linux、Apache、MySQL、PHP ）确实好了太多太多，不过自己去配坑多，也是能够很好的吸收建站知识。<br>创建LAMP直接下载套件：yum -y install httpd mysql mysql-server php php-mysql php-gd php-xml<br>yum 是Linux下包管理命令，<br><img src="/2021/01/10/wordpress安装步骤/1240.png" alt="屏幕快照 2017-03-28 上午1.27.46.png"><br>这种情况下需要自己去下载mysql:</p><h1 id="下载mysql源安装包"><a href="#下载mysql源安装包" class="headerlink" title="下载mysql源安装包"></a>下载mysql源安装包</h1><p>shell&gt; wget <a href="http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm" target="_blank" rel="noopener">http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm</a></p><h1 id="安装mysql源"><a href="#安装mysql源" class="headerlink" title="安装mysql源"></a>安装mysql源</h1><p>shell&gt; yum localinstall mysql57-community-release-el7-8.noarch.rpm<br>检查mysql源是否安装成功<br>shell&gt; yum repolist enabled | grep “mysql.<em>-community.</em>“<br>￼<br> 看到上图所示表示安装成功<br>2、安装MySQL<br>shell&gt; yum install mysql-community-server</p><p><img src="/2021/01/10/wordpress安装步骤/1240-20210110191959901.png" alt="屏幕快照 2017-03-28 上午1.30.47.png"><br>要安装的东西挺多的</p><p>在数据库的操作中学到了几个有用的命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">启动</span><br><span class="line">shell&gt; systemctl start mysqld</span><br><span class="line">查看MySQL的启动状态</span><br><span class="line">shell&gt; systemctl status mysqld</span><br><span class="line">开机启动</span><br><span class="line">shell&gt; systemctl enable mysqld</span><br><span class="line">shell&gt; systemctl daemon-reload</span><br></pre></td></tr></table></figure></p><p>在日志里面查看生成的临时密码，可以通过下面命令快速查找<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">shell&gt; grep &apos;temporary password&apos; /var/log/mysqld.log</span><br><span class="line">//连接数据库</span><br><span class="line">mysql -uroot -p</span><br><span class="line">//重置密码</span><br><span class="line"> ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;MyNewPass4!&apos;; </span><br><span class="line">//添加远程账号：这个非常有用</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;yangxin&apos;@&apos;%&apos; IDENTIFIED BY &apos;Yangxin0917!&apos; WITH GRANT OPTION;</span><br></pre></td></tr></table></figure></p><p>参考：[<a href="http://www.cnblogs.com/hcbin/archive/2010/04/23/1718379.html" target="_blank" rel="noopener"><a href="http://www.cnblogs.com/hcbin/archive/2010/04/23/1718379.html" target="_blank" rel="noopener">MySQL] - MySQL的Grant命令</a></a></p><p>修改/etc/my.cnf配置文件，在[mysqld]下添加编码配置，如下所示：<br>[mysqld]<br>character_set_server=utf8<br>init_connect=’SET NAMES utf8’</p><p>重新启动mysql服务使配置生效：<br>systemctl restart mysqld</p><p>在数据库操作中有几个命令非常重要：<br>create database <strong><em><br>drop database </em></strong></p><p>对于处理初始化主机，腾讯官方提供了非常好的例子：</p><p>下载Wordpress的包一定要最新的，老的包会有很多坑，最好是去官网上确认下是不是最新的版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1 wget http://cn.wordpress.org/wordpress-3.3.2-zh_CN.zip   //下载 </span><br><span class="line">3 unzip wordpress-3.3.2-zh_CN.zip    //解压 </span><br><span class="line">5 cp wordpress/* /var/www/html/      //将wordprss下所有的文件复制到apache服务器下的根目录</span><br><span class="line">cd /var/www/html/wordpress/   //进入wordpress文件夹下</span><br><span class="line">cp wp-config-sample.php wp-config.php  //复制配置文件</span><br><span class="line">vim wp-config.php  //编辑wordpress的配置文件</span><br><span class="line">这个里面配置的一定要与数据库对应的账号密码吻合才行</span><br></pre></td></tr></table></figure><p>最完成的时候再次访问网站一个填好默认配置，一个博客网站就搭建好了，并没有想像的那么难。</p><p><img src="/2021/01/10/wordpress安装步骤/1240-20210110192000056.png" alt="屏幕快照 2017-03-28 上午2.10.51.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;###安装：&lt;br&gt;相对于自己去配置PHP,MYSQL,及HTTP服务，安装LAMP服务器系统（Linux、Apache、MySQL、PHP ）确实好了太多太多，不过自己去配坑多，也是能够很好的吸收建站知识。&lt;br&gt;创建LAMP直接下载套件：yum -y install h</summary>
      
    
    
    
    <category term="博客建站" scheme="http://yoursite.com/categories/博客建站/"/>
    
    
    <category term="wordpress" scheme="http://yoursite.com/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>pm2 Vue进程管理工具</title>
    <link href="http://yoursite.com/2021/01/09/pm2-Vue%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2021/01/09/pm2-Vue%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</id>
    <published>2021-01-09T11:17:25.000Z</published>
    <updated>2021-01-09T11:19:57.320Z</updated>
    
    <content type="html"><![CDATA[<p>当你的Node项目打包发布时，需要进行进程管理，pm是一个不错的选择<br>pm2是一个进程管理工具,可以用它来管理你的node进程，并查看node进程的状态，当然也支持性能监控，进程守护，负载均衡等功能<br>1、 pm2需要全局安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g pm2</span><br></pre></td></tr></table></figure><p>2、进入项目根目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">2.1 启动进程/应用 pm2 start bin/www 或 pm2 start app.js</span><br><span class="line">2.2 重命名进程/应用 pm2 start app.js --name wb123</span><br><span class="line">2.3 添加进程/应用 watch pm2 start bin/www --watch</span><br><span class="line">2.4 结束进程/应用 pm2 stop www</span><br><span class="line">2.5 结束所有进程/应用 pm2 stop all</span><br><span class="line">2.6 删除进程/应用 pm2 delete www</span><br><span class="line">2.7 删除所有进程/应用 pm2 delete all</span><br><span class="line">2.8 列出所有进程/应用 pm2 list</span><br><span class="line">2.9 查看某个进程/应用具体情况 pm2 describe www</span><br><span class="line">2.10 查看进程/应用的资源消耗情况 pm2 monit</span><br><span class="line">2.11 查看pm2的日志 pm2 logs</span><br><span class="line">2.12 若要查看某个进程/应用的日志,使用 pm2 logs www</span><br><span class="line">2.13 重新启动进程/应用 pm2 restart www</span><br><span class="line">2.14 重新启动所有进程/应用 pm2 restart all</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;当你的Node项目打包发布时，需要进行进程管理，pm是一个不错的选择&lt;br&gt;pm2是一个进程管理工具,可以用它来管理你的node进程，并查看node进程的状态，当然也支持性能监控，进程守护，负载均衡等功能&lt;br&gt;1、 pm2需要全局安装&lt;/p&gt;
&lt;figure class=</summary>
      
    
    
    
    <category term="编程工具" scheme="http://yoursite.com/categories/编程工具/"/>
    
    
    <category term="pm2" scheme="http://yoursite.com/tags/pm2/"/>
    
  </entry>
  
  <entry>
    <title>JS的Dom操作</title>
    <link href="http://yoursite.com/2021/01/09/JS%E7%9A%84Dom%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2021/01/09/JS%E7%9A%84Dom%E6%93%8D%E4%BD%9C/</id>
    <published>2021-01-09T10:55:23.000Z</published>
    <updated>2021-01-09T11:11:22.960Z</updated>
    
    <content type="html"><![CDATA[<p>在Vue、AngularJS双向绑定流行的今天，很少有人去做最原始的Dom操作了，但在混编项目中为了减少包大小，采用最基础的方式来更改数据，所以Dom操作是非常重要的，也是前端流行框架的基础</p><p>在文档对象模型 (DOM) 中，每个节点都是一个对象。DOM 节点有三个重要的属性 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. nodeName : 节点的名称</span><br><span class="line">2. nodeValue ：节点的值</span><br><span class="line">3. nodeType ：节点的类型</span><br></pre></td></tr></table></figure><p>搜索节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var idImage =  document.getElementById(&apos;id-image&apos;);</span><br></pre></td></tr></table></figure><p>节点操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> 一、添加和删除节点（HTML 元素）</span><br><span class="line">1、创建节点</span><br><span class="line">1）创建该元素（元素节点）；</span><br><span class="line">2）向一个已存在的元素追加该元素。</span><br><span class="line">语法：appendChild(newnode)</span><br><span class="line"> </span><br><span class="line">eg:</span><br><span class="line">  &lt;div id=&quot;div1&quot;&gt;</span><br><span class="line">      &lt;p id=&quot;p1&quot;&gt;这是一个段落&lt;/p&gt;</span><br><span class="line">      &lt;p id=&quot;p2&quot;&gt;这是另一个段落&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;script&gt;</span><br><span class="line">      var para=document.createElement(&quot;p&quot;);</span><br><span class="line">      var node=document.createTextNode(&quot;这是新段落。&quot;);</span><br><span class="line">      para.appendChild(node);</span><br><span class="line"> </span><br><span class="line">     var element=document.getElementById(&quot;div1&quot;);</span><br><span class="line">     element.appendChild(para);</span><br><span class="line"> &lt;/script&gt;</span><br><span class="line"> document.createElement(&quot;标签名&quot;);      // 创建元素节点</span><br><span class="line"> document.createTextNode(&quot;文本&quot;);      //创建文本节点</span><br><span class="line"> appendChild();                                           //方法向节点添加最后一个子节点。也可以使用 appendChild() 方法从一个元素向另一个元素中移动元素。 用法：a.appendChild(b)，把b添加到a内。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">2.添加节点 </span><br><span class="line">appendChild();                                            //在指定节点的最后一个子节点列表之后添加一个新的子节点。</span><br><span class="line"> 语法，eg:同上。</span><br><span class="line">insertBefore();                                             //insertBefore() 方法可在已有的子节点前插入一个新的子节点。</span><br><span class="line">语法：insertBefore(newnode,node);</span><br><span class="line">eg:</span><br><span class="line">  &lt;ul id=&quot;test&quot;&gt;</span><br><span class="line">      &lt;li&gt;JavaScript&lt;/li&gt;</span><br><span class="line">      &lt;li&gt;HTML&lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt; </span><br><span class="line">   </span><br><span class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        var otest = document.getElementById(&quot;test&quot;);  </span><br><span class="line">        var newli = document.createElement(&quot;li&quot;);</span><br><span class="line">        newli.innerHTML=&quot;php&quot;;</span><br><span class="line">       //otest.insertBefore(newli,otest.lastChild);</span><br><span class="line">       otest.insertBefore(newli,otest.childNodes[1]);</span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">3.删除节点</span><br><span class="line">removeChild()                                             //removeChild() 方法从子节点列表中删除某个节点。如删除成功，此方法可返回被删除的节点，如失败，则返回 NULL。</span><br><span class="line">语法：nodeObject.removeChild(node)</span><br><span class="line">eg:</span><br><span class="line">  &lt;div id=&quot;div1&quot;&gt;</span><br><span class="line">      &lt;p id=&quot;p1&quot;&gt;这是一个段落。&lt;/p&gt;</span><br><span class="line">      &lt;p id=&quot;p2&quot;&gt;这是另一个段落。&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;script&gt;</span><br><span class="line">      var parent=document.getElementById(&quot;div1&quot;);</span><br><span class="line">      var child=document.getElementById(&quot;p1&quot;);</span><br><span class="line">     parent.removeChild(child);</span><br><span class="line"> &lt;/script&gt;</span><br><span class="line">DOM 需要清楚需要删除的元素，以及它的父元素。先找到希望删除的子元素，然后使用其 parentNode 属性来找到父元素。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">4.替换节点</span><br><span class="line">replaceChild                                                //把一个给定父元素里面的一个子节点替换为另一个子节点。</span><br><span class="line">语法：referencre = element.replaceChild(newChild,oldChild);                //newChild: 必需，用于替换 oldChild的对象。 oldChild: 必需，被 newChild替换的对象。</span><br><span class="line">eg:</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">      &lt;b id=&quot;oldnode&quot;&gt;JavaScript&lt;/b&gt;是一个很常用的技术，为网页添加动态效果。&lt;/div&gt;</span><br><span class="line">      &lt;a href=&quot;javascript:replaceMessage()&quot;&gt; 将加粗改为斜体&lt;/a&gt;</span><br><span class="line">    </span><br><span class="line">      &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">          function replaceMessage()&#123;</span><br><span class="line">          　　var b=document.getElementById(&quot;oldnode&quot;);</span><br><span class="line">          　　var newNode=document.createElement(&quot;i&quot;);</span><br><span class="line">          　　newNode.innerHTML=b.innerHTML;</span><br><span class="line">         　　b.parentNode.replaceChild(newNode,b);</span><br><span class="line">         &#125;    </span><br><span class="line">   &lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">注意：当 oldnew 被替换时，所有与之相关的属性内容都将被移除。 newChild必须先被建立。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">5.访问子节点</span><br><span class="line">childNodes                                                  //访问选定元素节点下的所有子节点的列表，返回的值可以看作是一个数组，他具有length属性。</span><br><span class="line">语法：elementNode.childNodes            //可用childNodes[i]数组的形式表示第几个子元素</span><br><span class="line">eg:</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">      javascript  </span><br><span class="line">      &lt;p&gt;javascript&lt;/p&gt;</span><br><span class="line">      &lt;div&gt;jQuery&lt;/div&gt;</span><br><span class="line">      &lt;h5&gt;PHP&lt;/h5&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">       var int=document.getElementsByTagName(&quot;div&quot;)[0].childNodes;</span><br><span class="line">       for (var i=0;i&lt;int.length;i++)</span><br><span class="line">      &#123;</span><br><span class="line">          document.write(&quot;名字：&quot;+int[i].nodeName+&quot;&lt;br&gt;&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      document.write(&quot;子节点个数：&quot;+int.length+&quot;&lt;br&gt;&quot;);</span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">6.访问子节点的第一和最后项</span><br><span class="line">firstChild                   //返回‘childNodes’数组的第一个子节点。如果选定的节点没有子节点，则该属性返回 NULL。</span><br><span class="line">语法：node.firstChild                                     //与elementNode.childNodes[0]是同样的效果。 </span><br><span class="line">lastChild                    //返回‘childNodes’数组的第一个子节点。如果选定的节点没有子节点，则该属性返回 NULL。</span><br><span class="line">语法：node.lastChild                                  //与elementNode.childNodes[elementNode.childNodes.length-1]是同样的效果。</span><br><span class="line">eg：</span><br><span class="line">  &lt;div id=&quot;con&quot;&gt;</span><br><span class="line">      &lt;p&gt;javascript&lt;/p&gt;</span><br><span class="line">      &lt;div&gt;jQuery&lt;/div&gt;</span><br><span class="line">      &lt;h5&gt;PHP&lt;/h5&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">      var x=document.getElementById(&quot;con&quot;);</span><br><span class="line">      document.write(&quot;第一个子节点：&quot;+x.firstChild.nodeName+&quot;&lt;br&gt;&quot;);</span><br><span class="line">      document.write(&quot;最后一个子节点：&quot;+x.lastChild.nodeName);</span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">7.访问父节点</span><br><span class="line">parentNode                                                 //获取指定节点的父节点</span><br><span class="line">语法：elementNode.parentNode</span><br><span class="line">eg:</span><br><span class="line"> &lt;div id=&quot;text&quot;&gt;</span><br><span class="line">     &lt;p id=&quot;con&quot;&gt; parentNode 获取指点节点的父节点&lt;/p&gt;</span><br><span class="line"> &lt;/div&gt; </span><br><span class="line"> &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">     var mynode= document.getElementById(&quot;con&quot;);</span><br><span class="line">     document.write(mynode.parentNode.nodeName);</span><br><span class="line"> &lt;/script&gt;</span><br><span class="line">注意: 父节点只有一个，浏览器兼容问题，chrome、firefox等浏览器标签之间的空白也算是一个文本节点。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">8.访问兄弟节点</span><br><span class="line">nextSibling                                                   //可返回某个节点之后紧跟的节点（处于同一树层级中）。</span><br><span class="line">语法：nodeObject.nextSibling</span><br><span class="line">previousSibling                                           //可返回某个节点之前紧跟的节点（处于同一树层级中）。</span><br><span class="line">语法：nodeObject.previousSibling  </span><br><span class="line">eg:</span><br><span class="line">  &lt;ul id=&quot;myList&quot;&gt;</span><br><span class="line">      &lt;li id=&quot;item1&quot;&gt;Coffee&lt;/li&gt;</span><br><span class="line">      &lt;li id=&quot;item2&quot;&gt;Tea&lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">  &lt;p id=&quot;demo&quot;&gt;点击按钮来获得首个项目的下一个同胞。&lt;/p&gt;</span><br><span class="line">  &lt;button onclick=&quot;myFunction()&quot;&gt;试一下&lt;/button&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">      function myFunction()</span><br><span class="line">      &#123;</span><br><span class="line">         var x=document.getElementById(&quot;demo&quot;);  </span><br><span class="line">         x.innerHTML=document.getElementById(&quot;item1&quot;).nextSibling.innerHTML;</span><br><span class="line">     &#125;</span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在Vue、AngularJS双向绑定流行的今天，很少有人去做最原始的Dom操作了，但在混编项目中为了减少包大小，采用最基础的方式来更改数据，所以Dom操作是非常重要的，也是前端流行框架的基础&lt;/p&gt;
&lt;p&gt;在文档对象模型 (DOM) 中，每个节点都是一个对象。DOM 节点有</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/前端开发/"/>
    
    
    <category term="JS" scheme="http://yoursite.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>JS图片压缩</title>
    <link href="http://yoursite.com/2021/01/09/JS%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/"/>
    <id>http://yoursite.com/2021/01/09/JS%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/</id>
    <published>2021-01-09T10:43:01.000Z</published>
    <updated>2021-01-09T10:47:15.812Z</updated>
    
    <content type="html"><![CDATA[<p>JS图片压缩原理是进行重绘操作后提取新图片，耗时较长</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">function dealImage(base64, w, callback) &#123;</span><br><span class="line">  var newImage = new Image();</span><br><span class="line">  var quality = 0.6;    //压缩系数0-1之间</span><br><span class="line">  newImage.src = base64;</span><br><span class="line">  newImage.setAttribute(&quot;crossOrigin&quot;, &apos;Anonymous&apos;);//url为外域时需要</span><br><span class="line">  var imgWidth, imgHeight;</span><br><span class="line">  newImage.onload = function () &#123;</span><br><span class="line">    imgWidth = this.width;</span><br><span class="line">    imgHeight = this.height;</span><br><span class="line">    var canvas = document.createElement(&quot;canvas&quot;);</span><br><span class="line">    var ctx = canvas.getContext(&quot;2d&quot;);</span><br><span class="line">    if (Math.max(imgWidth, imgHeight) &gt; w) &#123;</span><br><span class="line">    if (imgWidth &gt; imgHeight) &#123;</span><br><span class="line">    canvas.width = w;</span><br><span class="line">    canvas.height = w * imgHeight / imgWidth;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">    canvas.height = w;</span><br><span class="line">    canvas.width = w * imgWidth / imgHeight;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">    canvas.width = imgWidth;</span><br><span class="line">    canvas.height = imgHeight;</span><br><span class="line">    quality = 0.6;</span><br><span class="line">    &#125;</span><br><span class="line">    ctx.clearRect(0, 0, canvas.width, canvas.height);</span><br><span class="line">    ctx.drawImage(this, 0, 0, canvas.width, canvas.height);</span><br><span class="line">    var base64 = canvas.toDataURL(&quot;image/jpeg&quot;, quality); //压缩语句</span><br><span class="line">    // 如想确保图片压缩到自己想要的尺寸,如要求在50-150kb之间，请加以下语句，quality初始值根据情况自定</span><br><span class="line">    // while (base64.length / 1024 &gt; 150) &#123;</span><br><span class="line">    // quality -= 0.01;</span><br><span class="line">    // base64 = canvas.toDataURL(&quot;image/jpeg&quot;, quality);</span><br><span class="line">    // &#125;</span><br><span class="line">    // 防止最后一次压缩低于最低尺寸，只要quality递减合理，无需考虑</span><br><span class="line">    // while (base64.length / 1024 &lt; 50) &#123;</span><br><span class="line">    // quality += 0.001;</span><br><span class="line">    // base64 = canvas.toDataURL(&quot;image/jpeg&quot;, quality);</span><br><span class="line">    // &#125;</span><br><span class="line">    callback(base64);//必须通过回调函数返回，否则无法及时拿到该值</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回调方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var base64= path;</span><br><span class="line">dealImage(base64, 500, (newImage) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;JS图片压缩原理是进行重绘操作后提取新图片，耗时较长&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JS头像显示居中部分</title>
    <link href="http://yoursite.com/2021/01/09/JS%E5%A4%B4%E5%83%8F%E6%98%BE%E7%A4%BA%E5%B1%85%E4%B8%AD%E9%83%A8%E5%88%86/"/>
    <id>http://yoursite.com/2021/01/09/JS%E5%A4%B4%E5%83%8F%E6%98%BE%E7%A4%BA%E5%B1%85%E4%B8%AD%E9%83%A8%E5%88%86/</id>
    <published>2021-01-09T10:38:28.000Z</published>
    <updated>2021-01-09T10:41:00.782Z</updated>
    
    <content type="html"><![CDATA[<p>在图片全屏轮播时，为了兼容更大的屏幕，我们常常把图片设置为很大，但是在显示的过程中，如果让图片随浏览器自动变化的话，常常会把图片压缩变形，影响显示，在不压缩图片的情况下，如何只显示图片的中间部分呢？<br>目前提供两种解决方案：</p><p>方案一：引入css</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">.parent &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    overflow: hidden;</span><br><span class="line"> 　　width:400px;</span><br><span class="line">　 　height:300px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.child &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: -9999px;</span><br><span class="line">    bottom: -9999px;</span><br><span class="line">    left: -9999px;</span><br><span class="line">    right: -9999px;</span><br><span class="line">    margin: auto;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">相应的html代码为：</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">　　&lt;head&gt;</span><br><span class="line">　　&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">　　&lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">　　&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">　　　　.parent &#123;</span><br><span class="line">　　　　　　position: relative;</span><br><span class="line">　　　　　　overflow: hidden;</span><br><span class="line">　　　　　　height: 300px;</span><br><span class="line">　　　　　　width: 400px;</span><br><span class="line">　　　　&#125;</span><br><span class="line">　　　　.child &#123;</span><br><span class="line">　　　　　　position: absolute;</span><br><span class="line">　　　　　　top: -9999px;</span><br><span class="line">　　　　　　bottom: -9999px;</span><br><span class="line">　　　　　　left: -9999px;</span><br><span class="line">　　　　　　right: -9999px;</span><br><span class="line">　　　　　　margin: auto;</span><br><span class="line">　　　　&#125;</span><br><span class="line">　　&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;parent&quot;&gt;</span><br><span class="line">　　&lt;img class=&quot;child&quot; src=&quot;http://c11.eoemarket.com/upload/apps/2013/0420/131329/screenshots/21bf3021-aeef-4dbf-fd5c-6dd7c24cb1f3.jpg&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>方案二：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        body&#123;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        .container&#123;</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 400px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        .container img&#123;</span><br><span class="line">            margin: 0 -100% 0 -100%;</span><br><span class="line">            vertical-align: top;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 屏幕的放大或缩小都不会压缩里面的图片，里面的图片一直会在内容区域居中显示 --&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;http://a.hiphotos.baidu.com/zhidao/pic/item/72f082025aafa40fa38bfc55a964034f79f019ec.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在图片全屏轮播时，为了兼容更大的屏幕，我们常常把图片设置为很大，但是在显示的过程中，如果让图片随浏览器自动变化的话，常常会把图片压缩变形，影响显示，在不压缩图片的情况下，如何只显示图片的中间部分呢？&lt;br&gt;目前提供两种解决方案：&lt;/p&gt;
&lt;p&gt;方案一：引入css&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/前端开发/"/>
    
    
    <category term="JS" scheme="http://yoursite.com/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>npm配置文件及包管理</title>
    <link href="http://yoursite.com/2021/01/09/npm%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8F%8A%E5%8C%85%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2021/01/09/npm%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8F%8A%E5%8C%85%E7%AE%A1%E7%90%86/</id>
    <published>2021-01-09T10:32:00.000Z</published>
    <updated>2021-01-09T11:15:48.292Z</updated>
    
    <content type="html"><![CDATA[<p>npm全局配置文件可以通过以下命令进行查找</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get userconfig  *## 查看配置文件路径</span><br></pre></td></tr></table></figure><p>作为全局配置</p><p>还可以在Node项目中添加.npmrc作为项目配置</p><p><strong>config常用命令</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config ls -l  *##　查看所有配置项* npm config get cache  *## 查看缓存配置，get后面可以跟任意配置项* npm config edit  *## 直接编辑config文件，这个会打开文本*</span><br></pre></td></tr></table></figure><p><strong>配置文件内容</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">registry=https://registry.npm.taobao.org/    //下载源</span><br><span class="line"></span><br><span class="line">@yh:registry=http://*****//私有仓库</span><br><span class="line"></span><br><span class="line">home=https://www.npmjs.org</span><br><span class="line"></span><br><span class="line">ELECTRON_MIRROR=https://npm.taobao.org/mirrors/electron/</span><br><span class="line"></span><br><span class="line">//registry.npm.taobao.org/:_password=&quot;bnBtUEBzc3cwcmQxMjM=&quot;</span><br><span class="line"></span><br><span class="line">//registry.npm.taobao.org/:username=cooler112</span><br><span class="line"></span><br><span class="line">//registry.npm.taobao.org/:email=971656743@qq.com</span><br><span class="line"></span><br><span class="line">//registry.npm.taobao.org/:always-auth=false</span><br><span class="line"></span><br><span class="line">//registry.npmjs.org/:_authToken=7cbacf76-47c5-480d-aaba-7d26d75e356f</span><br><span class="line"></span><br><span class="line">prefix=/Users/smithcool/.nvm/versions/node/v10.15.3//npm下载包保存路径</span><br></pre></td></tr></table></figure><p>npm查看本地包版本号和远程包的版本号<br>npm 查看远程包<br>第一种方法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm info &lt;packageName&gt;</span><br></pre></td></tr></table></figure></p><p>第二种方法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm view &lt;packageName&gt; versions --json</span><br></pre></td></tr></table></figure></p><p>npm查看本地安装的包版本号<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm ls &lt;packageName&gt;        // 本地包</span><br><span class="line">npm ls &lt;packageName&gt; -g     // 全局安装包</span><br></pre></td></tr></table></figure></p><p>npm语义化版本号</p><p>npm使用 a.b.c 的版本号来管理安装包，a为达版本号，有重大api改变，一般不向下兼容，b为小版本号，新增功能，向下兼容，c为补丁号，通常修复一些bug。npm安装包的时候允许使用一些特殊符号表示安装的版本范围，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~a.b.c :    取最新的c的版本号值，a与b保持不变</span><br><span class="line">^a.b.c :    取b和c均为最新版本号，a保持不变</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;npm全局配置文件可以通过以下命令进行查找&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;t</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JS严格模式有哪些限制</title>
    <link href="http://yoursite.com/2021/01/09/JS%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F%E6%9C%89%E5%93%AA%E4%BA%9B%E9%99%90%E5%88%B6/"/>
    <id>http://yoursite.com/2021/01/09/JS%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F%E6%9C%89%E5%93%AA%E4%BA%9B%E9%99%90%E5%88%B6/</id>
    <published>2021-01-09T10:16:31.000Z</published>
    <updated>2021-01-09T10:16:52.422Z</updated>
    
    <content type="html"><![CDATA[<p>严格模式的主要目标之一，是显式捕获那些容易产生但在运行时并不明显的编码错误。严格模式中添加了如下的新运行时错误：</p><ul><li>给未声明的标识符赋值。在旧版 JavaScript 中，对输错的变量名称进行赋值，会导致在全局对象上创建属性。</li><li>给只读的自有或继承属性赋值。在旧版 JavaScript 中，这种操作会静默地不生效。</li><li>尝试在不可扩展的对象上创建属性。这样的对象在 ES5 之前并不存在，但为了保持一致性，在 ES5 中的严格模式之外执行此操作时，也将会静默地不生效。</li><li>将 delete 运算符应用于不可删除的属性。在旧版 JavaScript 中，这时的 delete 会返回 false。</li><li>将 delete 运算符应用于变量引用会产生语法错误。在旧版 JavaScript 中，对于显式声明的变量，delete 会返回 false。如果变量引用来自与 with 语句相配合的对象，或者属于全局对象的属性，那么它在旧版 JavaScript 中将被删除。</li></ul><p>严格模式还会移除或修改那些可能使程序更混乱、更难优化或更不安全的特性：</p><ul><li>禁用 with 语句。with 语句提供了一种变量引用的动态作用域形式，这种形式可能会造成困扰，并且不利于各实现中的优化。</li><li>eval 函数不能动态添加新绑定到当前作用域。</li><li>eval 和 arguments 不能用作变量名或参数名。</li><li>函数的 arguments 对象不与其形参相关联。作为替代，严格模式下的 arguments 对象是一个数组式（array-like）的对象，其元素是传递给函数的参数值的快照。修改其元素不会修改相应形参的值，反之亦然。</li><li>严格模式下，函数的 arguments 对象没有 callee 属性。将这样的 arguments 对象传递给其他代码时，不会再隐式转移出对其上函数的调用能力<a href="https://github.com/doodlewind/jshistory-cn/blob/master/notes.md#81" target="_blank" rel="noopener">81</a>。</li><li>严格模式下，不允许实现在函数的 arguments 对象上提供 caller 属性。 caller 属性是 ES3 的一个非标准但已广泛实现的扩展，它允许遍历函数的调用堆栈，获取到所有的调用者函数。</li><li>严格模式下，调用函数时如果没有提供 this 值，全局对象对其就不可见。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;严格模式的主要目标之一，是显式捕获那些容易产生但在运行时并不明显的编码错误。严格模式中添加了如下的新运行时错误：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;给未声明的标识符赋值。在旧版 JavaScript 中，对输错的变量名称进行赋值，会导致在全局对象上创建属性。&lt;/li&gt;
&lt;li&gt;给只</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/前端开发/"/>
    
    
    <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>JS随机数生成</title>
    <link href="http://yoursite.com/2021/01/09/JS%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90/"/>
    <id>http://yoursite.com/2021/01/09/JS%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90/</id>
    <published>2021-01-09T10:11:51.000Z</published>
    <updated>2021-01-09T10:16:02.999Z</updated>
    
    <content type="html"><![CDATA[<p>在前端调试时、有时需要判断是否同时收到两条相同通知，除了用毫秒及时间判断，还可以用随机数</p><p>使用Math函数解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">//Math 对象方法：</span><br><span class="line">Math.ceil();  //向上取整。</span><br><span class="line">Math.floor();  //向下取整。</span><br><span class="line">Math.round();  //四舍五入。</span><br><span class="line">Math.random();  //0.0 ~ 1.0 之间的一个伪随机数。【包含0不包含1】 //比如0.8647578968666494</span><br><span class="line">//实例说明：</span><br><span class="line">Math.ceil(Math.random()*10);      // 获取从1到10的随机整数 ，取0的概率极小。</span><br><span class="line">Math.round(Math.random());   //可均衡获取0到1的随机整数。</span><br><span class="line">Math.floor(Math.random()*10);  //可均衡获取0到9的随机整数。</span><br><span class="line">Math.round(Math.random()*10);  //基本均衡获取0到10的随机整数</span><br><span class="line">生成[n,m]的随机整数的函数</span><br><span class="line"></span><br><span class="line">//生成从minNum到maxNum的随机数</span><br><span class="line">function randomNum(minNum, maxNum) &#123;</span><br><span class="line">  switch (arguments.length) &#123;</span><br><span class="line">    case 1:</span><br><span class="line">      return parseInt(Math.random() * minNum + 1, 10);</span><br><span class="line">      break;</span><br><span class="line">    case 2:</span><br><span class="line">      return parseInt(Math.random() * ( maxNum - minNum + 1 ) + minNum, 10);</span><br><span class="line">      //或者 Math.floor(Math.random()*( maxNum - minNum + 1 ) + minNum );</span><br><span class="line">      break;</span><br><span class="line">    default:</span><br><span class="line">      return 0;</span><br><span class="line">      break;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; </span><br><span class="line">Math.random() 生成 [0,1) 的数，所以 Math.random()*5 生成 &#123;0,5) 的数。</span><br><span class="line">parseInt() 可以简单理解成返回舍去参数的小数部分后的整数，所以 parseInt(Math.random()*5) 生成的是 [0,4] 的随机整数。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在前端调试时、有时需要判断是否同时收到两条相同通知，除了用毫秒及时间判断，还可以用随机数&lt;/p&gt;
&lt;p&gt;使用Math函数解决&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/前端开发/"/>
    
    
    <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>跨平台开发手机网页调试技巧</title>
    <link href="http://yoursite.com/2021/01/09/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E6%89%8B%E6%9C%BA%E7%BD%91%E9%A1%B5%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2021/01/09/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E6%89%8B%E6%9C%BA%E7%BD%91%E9%A1%B5%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7/</id>
    <published>2021-01-09T10:07:35.000Z</published>
    <updated>2021-01-09T10:08:21.316Z</updated>
    
    <content type="html"><![CDATA[<p>当移动跨平台项目远程加载网址时，为了进行可试化调试</p><p>安卓可以使用Chrome提供的Inspect进行调试</p><p>苹果可以打开Safari进行调试</p><p><strong>安卓手机加载远程网页</strong></p><p>1.安卓手机连接电脑，允许调试</p><p>2.打开Chrome流量器输入：chrome://inspect/#devices</p><p>在线调试器，浏览器直接连接手机观察网页</p><p>3.配置相关网络请求地址端口号，刷新页面即可同步手机加载的页面</p><p>4.点击进入相关页面直接进行浏览器调试、刷新（需要科学上网）</p><p><strong>苹果手机加载远程网页</strong></p><p>1.苹果手机连接电脑，允许信任设备</p><p>2.运行项目打开Safari</p><p>3.在Develop中选择对应移动调试即可查看网页元素</p><p>总结：安卓手机调试较为方便、苹果手机最好在Xcode环境下进行原生调试较方便，但同步较花时间</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;当移动跨平台项目远程加载网址时，为了进行可试化调试&lt;/p&gt;
&lt;p&gt;安卓可以使用Chrome提供的Inspect进行调试&lt;/p&gt;
&lt;p&gt;苹果可以打开Safari进行调试&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安卓手机加载远程网页&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.安卓手机连接电脑，</summary>
      
    
    
    
    <category term="前端开发" scheme="http://yoursite.com/categories/前端开发/"/>
    
    
    <category term="调试" scheme="http://yoursite.com/tags/调试/"/>
    
  </entry>
  
  <entry>
    <title>vscode的几个特别好用的快捷键</title>
    <link href="http://yoursite.com/2021/01/09/vs%20code%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://yoursite.com/2021/01/09/vs%20code%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2021-01-09T09:31:28.000Z</published>
    <updated>2021-01-09T09:57:06.641Z</updated>
    
    <content type="html"><![CDATA[<p>####1.复选多个word然后一起修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command + D //选中word，然后修改。</span><br></pre></td></tr></table></figure><p>####2.comment 插入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">opt + shift + a: // 插入 /* */ （toggle)</span><br><span class="line"></span><br><span class="line">Cmd + /: //插入 //</span><br></pre></td></tr></table></figure><p>####3.左右挪行</p><p>选中复数行 tab： 向右缩进</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shift+tab： //向左回退</span><br></pre></td></tr></table></figure><p>####4.上下挪行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Option + Up/Down //光标停在想要挪动的行上，可以将该行上下移动 复选多行 则多行同时移动</span><br></pre></td></tr></table></figure><p>####5.拷贝行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Option+Shift+Up/Down 可以将该行往上/下拷贝</span><br></pre></td></tr></table></figure><p>####6.增加和删除行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Cmd + enter //在该行下面增加新行，不论当前光标是否在行尾</span><br><span class="line"></span><br><span class="line">Cmd + Shift + K //删除当前行</span><br></pre></td></tr></table></figure><p>####7.移动光标</p><p>Cmd + 光标的上下左右，可以将光标移到行Top，行End，行最左，行最右</p><p>####8.寻找下一个match 的字串</p><p>ctrl+F 在文中查找字串，找到一个后，enter就可跳转到下一个。</p><p>以上为mac 下的VScode 操作快捷键。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;####1.复选多个word然后一起修改&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td</summary>
      
    
    
    
    <category term="编程工具" scheme="http://yoursite.com/categories/编程工具/"/>
    
    
    <category term="快捷键" scheme="http://yoursite.com/tags/快捷键/"/>
    
  </entry>
  
  <entry>
    <title>Swift起步</title>
    <link href="http://yoursite.com/2019/03/06/Swift%E8%B5%B7%E6%AD%A5/"/>
    <id>http://yoursite.com/2019/03/06/Swift%E8%B5%B7%E6%AD%A5/</id>
    <published>2019-03-06T09:46:24.000Z</published>
    <updated>2021-01-09T08:28:02.436Z</updated>
    
    <content type="html"><![CDATA[<p>由于公司需要，所以拖得不得再拖的Swift学习终于提上日程，教就是最好的学，先摘要，后总结完善，在实战过程中学习进步。</p><p>Swift，苹果于2014年<a href="https://baike.baidu.com/item/WWDC" target="_blank" rel="noopener">WWDC</a>（苹果开发者大会）发布的新开发语言，可与<a href="https://baike.baidu.com/item/Objective-C" target="_blank" rel="noopener">Objective-C</a>*共同运行于<a href="https://baike.baidu.com/item/Mac%20OS" target="_blank" rel="noopener">Mac OS</a>和<a href="https://baike.baidu.com/item/iOS/45705" target="_blank" rel="noopener">iOS</a>平台，用于搭建基于苹果平台的应用程序。</p><p>###Swift核心：<br>安全：明确的类型定义和语法规范有效避免出现未知错误，空指针引用<br>高效：是替代C、C++、OC的理想化工具，良好一致的性能优异表现<br>良好阅读性：基于数十年的科学语法研究，持续优化语法提供更好的可读可写生</p><p>###Swift特点<br>Closures unified with function pointers<br>Tuples and multiple return values<br>Generics<br>Fast and concise iteration over a range or collection<br>Structs that support methods, extensions, and protocols<br>Functional programming patterns, e.g., map and filter<br>Powerful error handling built-in<br>Advanced control flow with do, guard, defer, and repeat keywords<br>闭包的统一与函数指针<br>元组和多个返回值<br>泛型<br>快速而简洁的迭代范围或集合<br>支持的方法，扩展的协议结构。<br>函数式编程模式，例如：映射（map）和过滤器（filter）<br>强大的异常处理<br>先进的控制流关键字</p><p>###与之前语法的区别<br>不同于OC，Swift支持多元返回值<br>类型安全<br>类型安全语言有严格的语法要求</p><p></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于公司需要，所以拖得不得再拖的Swift学习终于提上日程，教就是最好的学，先摘要，后总结完善，在实战过程中学习进步。&lt;/p&gt;
&lt;p&gt;Swift，苹果于2014年&lt;a href=&quot;https://baike.baidu.com/item/WWDC&quot; target=&quot;_bla</summary>
      
    
    
    
    <category term="苹果开发" scheme="http://yoursite.com/categories/苹果开发/"/>
    
    
    <category term="swift" scheme="http://yoursite.com/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>iOS端本地sqlite批量插入对比</title>
    <link href="http://yoursite.com/2019/03/06/iOS%E7%AB%AF%E6%9C%AC%E5%9C%B0sqlite%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5%E5%AF%B9%E6%AF%94/"/>
    <id>http://yoursite.com/2019/03/06/iOS%E7%AB%AF%E6%9C%AC%E5%9C%B0sqlite%E6%89%B9%E9%87%8F%E6%8F%92%E5%85%A5%E5%AF%B9%E6%AF%94/</id>
    <published>2019-03-06T09:42:54.000Z</published>
    <updated>2021-01-09T08:24:52.174Z</updated>
    
    <content type="html"><![CDATA[<p>###1、Sqlite优势明显<br>iOS端本地数据库一般用sqlite,而且相对于plist、userdefault、文本存储等，使用数据库方便大量数据的操作，而且与后台数据库具有一致性，减少中间不必要的转换，适应能力强。配合FMDB来使用，非常的方便，有一点需要在App内部空间创建.sqlite文件，如果去包含资源文件是可读不可写的。</p><p>###2、什么文件适合数据库<br>对于常见的行政区域，由于可能会出现数据相应的调整，虽然不是很频繁，但是如果保存在本地会影响相关的业务。比如成都这几年分出了天府新区，郫县改为了区，谁能保证以后会不会还有大动作，所以从后台获取较妥，为了避免不必要的数据请求，App启动前可以进行版本检查，判断是否对某些文件进行更新。</p><p>###3、放在数据库要注意的事情<br>  . 数据库句柄的引用和关闭，每次打开是要判断是否数据库可用，用完后即时关闭，避免资源占用<br>  . 可以独立出来统一管理，比如通知消息一般会存数据库，那么通知的增删查改可以放数据库，地址查对应省市区也可以，可以采用一个单例来统一管理.<br>  . 性能和效率</p><pre><code>dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);      dispatch_sync(queue, ^{          [dataBase open];          for (NSInteger index = 0; index &lt; contentArr.count; index++) {              NSDictionary *dic = [contentArr objectAtIndex:index];              BOOL resulat = [dataBase executeUpdate:@&quot;INSERT INTO address(L0_CMT,L0_ID,L1_CMT,L1_ID,L2_CMT,L2_ID,L3_CMT,L3_ID,P_ID) VALUES(?,?,?,?,?,?,?,?,?);&quot;,[dic objectForKey:@&quot;L0_CMT&quot;]                              ,[dic objectForKey:@&quot;L0_ID&quot;]                              ,[dic objectForKey:@&quot;L1_CMT&quot;]                              ,[dic objectForKey:@&quot;L1_ID&quot;]                              ,[dic objectForKey:@&quot;L2_CMT&quot;]                              ,[dic objectForKey:@&quot;L2_ID&quot;]                              ,[dic objectForKey:@&quot;L3_CMT&quot;]                              ,[dic objectForKey:@&quot;L3_ID&quot;]                              ,[dic objectForKey:@&quot;P_ID&quot;]];              if (resulat) {              }          }          [dataBase close];);</code></pre><p>如上图所示看似没有问题，实际上暗茂杀机。之前使用dispatch_async来进行异步数据操作完成批量数据写入，但是运行时报错无法打开数据库句柄，推断数据库是线程安全，不允许多个线程同时对其进行操作，所以对数据库的操作应该放在主线程中。</p><p>问题又来了，放在主线程通过全局串行队列进行的时候，可能会导致操作卡顿，因为省市区几千条数据，我是循环插入的，那该怎么办，于是有了后面的批量插入，效率快多了</p><pre><code>[dataBase setShouldCacheStatements:YES];//是否应该缓存插入描述   static NSString *insertSQLStatment = @&quot;INSERT INTO address(L0_CMT,L0_ID,L1_CMT,L1_ID,L2_CMT,L2_ID,L3_CMT,L3_ID,P_ID) VALUES(?,?,?,?,?,?,?,?,?);&quot;;   [dataBase beginTransaction]; //启动事务   for (NSDictionary *dic in contentArr)   {       [dataBase executeUpdate:insertSQLStatment withArgumentsInArray:@[                                                                        [dic objectForKey:@&quot;L0_CMT&quot;]                                                                        ,[dic objectForKey:@&quot;L0_ID&quot;]                                                                         ,[dic objectForKey:@&quot;L1_CMT&quot;]                                                                        ,[dic objectForKey:@&quot;L1_ID&quot;]                                                                        ,[dic objectForKey:@&quot;L2_CMT&quot;]                                                                        ,[dic objectForKey:@&quot;L2_ID&quot;]                                                                        ,[dic objectForKey:@&quot;L3_CMT&quot;]                                                                        ,[dic objectForKey:@&quot;L3_ID&quot;]                                                                       ,[dic objectForKey:@&quot;P_ID&quot;]]                                                                        ];   }   [dataBase commit]; //开始执行   [dataBase close];</code></pre><p>事务对于大批量操作太管用了，主要是快，这样就算有阻塞，时间短得可怜，用户无法察觉。</p><p>欢迎讨论交流</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;###1、Sqlite优势明显&lt;br&gt;iOS端本地数据库一般用sqlite,而且相对于plist、userdefault、文本存储等，使用数据库方便大量数据的操作，而且与后台数据库具有一致性，减少中间不必要的转换，适应能力强。配合FMDB来使用，非常的方便，有一点需要在Ap</summary>
      
    
    
    
    <category term="苹果开发" scheme="http://yoursite.com/categories/苹果开发/"/>
    
    
    <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS再次打开推送总结</title>
    <link href="http://yoursite.com/2019/03/06/iOS%E5%86%8D%E6%AC%A1%E6%89%93%E5%BC%80%E6%8E%A8%E9%80%81%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2019/03/06/iOS%E5%86%8D%E6%AC%A1%E6%89%93%E5%BC%80%E6%8E%A8%E9%80%81%E6%80%BB%E7%BB%93/</id>
    <published>2019-03-06T09:42:40.000Z</published>
    <updated>2021-01-09T07:24:21.725Z</updated>
    
    
    
    
    <category term="苹果开发" scheme="http://yoursite.com/categories/苹果开发/"/>
    
    
    <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>APP中常用的混合加密</title>
    <link href="http://yoursite.com/2019/03/06/APP%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E6%B7%B7%E5%90%88%E5%8A%A0%E5%AF%86/"/>
    <id>http://yoursite.com/2019/03/06/APP%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E6%B7%B7%E5%90%88%E5%8A%A0%E5%AF%86/</id>
    <published>2019-03-06T09:40:49.000Z</published>
    <updated>2021-01-09T08:21:50.769Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>OC常用格式检查</title>
    <link href="http://yoursite.com/2019/03/06/OC%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F%E6%A3%80%E6%9F%A5/"/>
    <id>http://yoursite.com/2019/03/06/OC%E5%B8%B8%E7%94%A8%E6%A0%BC%E5%BC%8F%E6%A3%80%E6%9F%A5/</id>
    <published>2019-03-06T09:40:22.000Z</published>
    <updated>2021-01-09T09:42:02.286Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>要点：</p><ol><li>在textField或者TextView进行输入时一般会进行输入时检查</li><li>点击提交的时候会进行手机号之类的格式验证</li><li>邮箱身份证验证</li><li>数据类型判断</li><li>小数判断</li><li>时间格式转换</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  FormatAssistant.h</span><br><span class="line">//  HexiShop</span><br><span class="line">//</span><br><span class="line">//  Created by Smith Cool on 16/8/18.</span><br><span class="line">//  Copyright © 2016年 Xiaohr. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#import &lt;Foundation/Foundation.h&gt;</span><br><span class="line"></span><br><span class="line">@interface FormatAssistant : NSObject</span><br><span class="line"></span><br><span class="line">//输入检查input开头</span><br><span class="line">//类型检查is开头</span><br><span class="line">#pragma mark ---------------------手机号phone--------------------------------</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:42</span><br><span class="line"> *</span><br><span class="line"> *  针对手机号码输入的格式检查</span><br><span class="line"> *</span><br><span class="line"> *  @param BOOL number 逐步输入手机号</span><br><span class="line"> *</span><br><span class="line"> *  @return 正确返回yes，错误返回NO</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)inputValidatePhoneNumber:(NSString*)number;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:40</span><br><span class="line"> *</span><br><span class="line"> *  手机号码是否合法格式检查</span><br><span class="line"> *</span><br><span class="line"> *  @param BOOL phoneNumber</span><br><span class="line"> *</span><br><span class="line"> *  @return 不合法返回YES，合法返回NO</span><br><span class="line"> */</span><br><span class="line">+(BOOL)phoneNumberisWrong:(NSString *)phoneNumber;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @brief 手机空格格式检查并返回值</span><br><span class="line"> *</span><br><span class="line"> *  @param phoneNumber 手机号</span><br><span class="line"> *</span><br><span class="line"> *  @return 是：有错</span><br><span class="line"> */</span><br><span class="line">+(BOOL)phoneNumberisWrongWithAll:(NSString *)phoneNumber;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:33</span><br><span class="line"> *</span><br><span class="line"> *  针对座机号码输入的格式检查</span><br><span class="line"> *</span><br><span class="line"> *  @param NSString zjNumber</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)inputZuoJiNumberisWrong:(NSString*)zjNumber;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#pragma mark -------------------------类型检查----------------------------------------</span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:29</span><br><span class="line"> *</span><br><span class="line"> *  是否为浮点型</span><br><span class="line"> *</span><br><span class="line"> *  @param string floatNumber</span><br><span class="line"> *</span><br><span class="line"> *  @return 为浮点型返回YES，否则返回NO</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)isPureFloat:(NSString*)floatNumber;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:48</span><br><span class="line"> *</span><br><span class="line"> *  是否为整型</span><br><span class="line"> *</span><br><span class="line"> *  @param string intNumber</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL 是返回YES，否则返回NO</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)isPureInt:(NSString*)intNumber;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 17:08:57</span><br><span class="line"> *</span><br><span class="line"> *  两位小数输入限制（必须与UITextFieldDelegate Change代理同用）</span><br><span class="line"> *</span><br><span class="line"> *  @param String xiaoshuStr 输入的数字</span><br><span class="line"> *  @param NSRange  rang    输入的变化</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+(BOOL)inputXiaoshuValidate:(NSString *)xiaoshuStr stringConfig:(NSString *)string shouldChangeCharactersInRange:(NSRange)range weishuConfig:(NSInteger)weishu;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:49</span><br><span class="line"> *</span><br><span class="line"> *  针对输入金额的格式检查</span><br><span class="line"> *</span><br><span class="line"> *  @param NSString moneyStr</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)inputMoneyFormat:(NSString*)moneyStr;</span><br><span class="line"></span><br><span class="line">#pragma mark -------------------------密码检查password----------------------------------------</span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:13</span><br><span class="line"> *</span><br><span class="line"> *  常规密码检查（6到20位大小数字）</span><br><span class="line"> *</span><br><span class="line"> *  @param BOOL passWordStr</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)passwordNormalisRight:(NSString *)passWordStr;</span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:20</span><br><span class="line"> *</span><br><span class="line"> *  密码输入格式检查 ^[a-zA-Z0-9|,|.|_|!|?]</span><br><span class="line"> *</span><br><span class="line"> *  @param String passwordInputStr</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)inputPasswordisRight:(NSString*)passwordInputStr;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#pragma mark -------------------------自定义格式检查----------------------------------------</span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:13</span><br><span class="line"> *</span><br><span class="line"> *  自定义符串类型检查 店铺名称检查（^[_|A-Za-z0-9\u4E00-\u9FA5_-]+$&quot;）</span><br><span class="line"> *</span><br><span class="line"> *  @param String passWordStr</span><br><span class="line"> *  @param String regix 匹配符</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)stringFormatisRight:(NSString *)string withRegix:(NSString *)regix;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:21</span><br><span class="line"> *</span><br><span class="line"> *  自定义输入格式检查</span><br><span class="line"> *</span><br><span class="line"> *  @param String inputString</span><br><span class="line"> *  @param String regix 匹配符</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+ (BOOL) inputStringFormatRight:(NSString *)inputString withRegix:(NSString *)regix;</span><br><span class="line"></span><br><span class="line">#pragma mark -------------------------其它格式检查----------------------------------------</span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 17:08:41</span><br><span class="line"> *</span><br><span class="line"> *  身份证号码格式检查</span><br><span class="line"> *</span><br><span class="line"> *  @param identityCard 身份证号串</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+(BOOL)IDcardFormateCheck:(NSString *)identityCard;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @brief 邮箱格式检查</span><br><span class="line"> *  @param String mailStr</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">+(BOOL)mailValidateIsRight:(NSString *)mailStr;</span><br><span class="line"></span><br><span class="line">+(NSString *)DateWidthFormat:(NSString *)formatStr dateConfig:(NSDate *)date;</span><br><span class="line">+(NSString *)DateWidthFormat:(NSString *)formatStr timeInterValeConfig:(double)timeTamp;</span><br><span class="line">-(NSString *)DateStrFromDate:(NSDate *)date;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br></pre></td><td class="code"><pre><span class="line">//</span><br><span class="line">//  FormatAssistant.m</span><br><span class="line">//  HexiShop</span><br><span class="line">//</span><br><span class="line">//  Created by Smith Cool on 16/8/18.</span><br><span class="line">//  Copyright © 2016年 Xiaohr. All rights reserved.</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">#import &quot;FormatAssistant.h&quot;</span><br><span class="line"></span><br><span class="line">@implementation FormatAssistant</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:42</span><br><span class="line"> *</span><br><span class="line"> *  针对手机号码输入的格式检查</span><br><span class="line"> *</span><br><span class="line"> *  @param BOOL number 逐步输入手机号</span><br><span class="line"> *</span><br><span class="line"> *  @return 正确返回yes，错误返回NO</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)inputValidatePhoneNumber:(NSString*)number&#123;</span><br><span class="line">    BOOL res = YES;</span><br><span class="line">    NSCharacterSet* tmpSet = [NSCharacterSet characterSetWithCharactersInString:@&quot;0123456789&quot;];</span><br><span class="line">    int i = 0;</span><br><span class="line">    while (i &lt; number.length) &#123;</span><br><span class="line">        NSString * string = [number substringWithRange:NSMakeRange(i, 1)];</span><br><span class="line">        NSRange range = [string rangeOfCharacterFromSet:tmpSet];</span><br><span class="line">        if (range.length == 0) &#123;</span><br><span class="line">            res = NO;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    return res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:40</span><br><span class="line"> *</span><br><span class="line"> *  手机号码是否合法格式检查</span><br><span class="line"> *</span><br><span class="line"> *  @param BOOL phoneNumber</span><br><span class="line"> *</span><br><span class="line"> *  @return 不合法返回YES，合法返回NO</span><br><span class="line"> */</span><br><span class="line">+(BOOL)phoneNumberisWrong:(NSString *)phoneNumber&#123;</span><br><span class="line">    NSString *phoneNo = strTrimming(phoneNumber);</span><br><span class="line">    NSString *regex = @&quot;1[3|4|5|7|8|][0-9]&#123;9&#125;&quot;;</span><br><span class="line">    NSPredicate *predicate = [NSPredicate predicateWithFormat:@&quot;SELF MATCHES %@&quot;, regex];</span><br><span class="line">    if (![predicate evaluateWithObject:phoneNo]) &#123;</span><br><span class="line">        return YES;</span><br><span class="line">    &#125;</span><br><span class="line">    return NO;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> *  @brief 手机空格格式检查并返回值</span><br><span class="line"> *</span><br><span class="line"> *  @param phoneNumber 手机号</span><br><span class="line"> *</span><br><span class="line"> *  @return 是：有错</span><br><span class="line"> */</span><br><span class="line">+(BOOL)phoneNumberisWrongWithAll:(NSString *)phoneNumber&#123;</span><br><span class="line">    if (![phoneNumber hasValue]) &#123;</span><br><span class="line">        [UserHelp showMessage:@&quot;手机号不能为空&quot;];</span><br><span class="line">        return YES;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        if([FormatAssistant phoneNumberisWrong:phoneNumber])&#123;</span><br><span class="line">            [UserHelp showMessage:@&quot;手机号格式不正确&quot;];</span><br><span class="line">            return YES;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            return NO;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:33</span><br><span class="line"> *</span><br><span class="line"> *  针对座机号码输入的格式检查</span><br><span class="line"> *</span><br><span class="line"> *  @param NSString zjNumber</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)inputZuoJiNumberisWrong:(NSString*)zjNumber&#123;</span><br><span class="line">    BOOL res = YES;</span><br><span class="line">    NSCharacterSet* tmpSet = [NSCharacterSet characterSetWithCharactersInString:@&quot;0123456789-&quot;];</span><br><span class="line">    int i = 0;</span><br><span class="line">    while (i &lt; zjNumber.length) &#123;</span><br><span class="line">        NSString * string = [zjNumber substringWithRange:NSMakeRange(i, 1)];</span><br><span class="line">        NSRange range = [string rangeOfCharacterFromSet:tmpSet];</span><br><span class="line">        if (range.length == 0) &#123;</span><br><span class="line">            res = NO;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    return res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark -------------------------类型检查----------------------------------------</span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:29</span><br><span class="line"> *</span><br><span class="line"> *  是否为浮点型</span><br><span class="line"> *</span><br><span class="line"> *  @param string floatNumber</span><br><span class="line"> *</span><br><span class="line"> *  @return 为浮点型返回YES，否则返回NO</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)isPureFloat:(NSString*)floatNumber&#123;</span><br><span class="line">    NSScanner* scan = [NSScanner scannerWithString:floatNumber];</span><br><span class="line">    float val;</span><br><span class="line">    return[scan scanFloat:&amp;val] &amp;&amp; [scan isAtEnd];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:48</span><br><span class="line"> *</span><br><span class="line"> *  是否为整型</span><br><span class="line"> *</span><br><span class="line"> *  @param string intNumber</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL 是返回YES，否则返回NO</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)isPureInt:(NSString*)intNumber&#123;</span><br><span class="line">    NSScanner* scan = [NSScanner scannerWithString:intNumber];</span><br><span class="line">    int val;</span><br><span class="line">    return[scan scanInt:&amp;val] &amp;&amp; [scan isAtEnd];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 17:08:57</span><br><span class="line"> *</span><br><span class="line"> *  两位小数输入限制（必须与UITextFieldDelegate Change代理同用）</span><br><span class="line"> *</span><br><span class="line"> *  @param String xiaoshuStr 输入的数字</span><br><span class="line"> *  @param String string 变化串</span><br><span class="line"> *  @param NSRange  rang    输入的变化</span><br><span class="line"> *  @param weishu</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">+(BOOL)inputXiaoshuValidate:(NSString *)xiaoshuStr stringConfig:(NSString *)string shouldChangeCharactersInRange:(NSRange)range weishuConfig:(NSInteger)weishu&#123;</span><br><span class="line">    BOOL isHaveDian = YES;</span><br><span class="line">    if ([xiaoshuStr rangeOfString:@&quot;.&quot;].location == NSNotFound) &#123;</span><br><span class="line">        isHaveDian = NO;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if ([string length] &gt; 0) &#123;</span><br><span class="line">        unichar single = [string characterAtIndex:0];//当前输入的字符</span><br><span class="line">        if ((single &gt;= &apos;0&apos; &amp;&amp; single &lt;= &apos;9&apos;) || single == &apos;.&apos;) &#123;//数据格式正确</span><br><span class="line">            </span><br><span class="line">            //首字母不能为0和小数点</span><br><span class="line">            if([xiaoshuStr length] == 0)&#123;</span><br><span class="line">                if(single == &apos;.&apos;) &#123;</span><br><span class="line">                    //                        [self showText:@&quot;亲，第一个数字不能为小数点&quot;];</span><br><span class="line">                    [xiaoshuStr stringByReplacingCharactersInRange:range withString:@&quot;&quot;];</span><br><span class="line">                    return NO;</span><br><span class="line">                &#125;</span><br><span class="line">                // if (single == &apos;0&apos;) &#123;</span><br><span class="line">                //                        [self showText:@&quot;亲，第一个数字不能为0&quot;];</span><br><span class="line">                //      [xiaoshuStr stringByReplacingCharactersInRange:range withString:@&quot;&quot;];</span><br><span class="line">                //    return NO;</span><br><span class="line">                //&#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            //输入的字符是否是小数点</span><br><span class="line">            if (single == &apos;.&apos;) &#123;</span><br><span class="line">                if(!isHaveDian)//text中还没有小数点</span><br><span class="line">                &#123;</span><br><span class="line">                    isHaveDian = YES;</span><br><span class="line">                    return YES;</span><br><span class="line">                    </span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    //                        [self showText:@&quot;亲，您已经输入过小数点了&quot;];</span><br><span class="line">                    [xiaoshuStr stringByReplacingCharactersInRange:range withString:@&quot;&quot;];</span><br><span class="line">                    return NO;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                if (isHaveDian) &#123;//存在小数点</span><br><span class="line">                    </span><br><span class="line">                    //判断小数点的位数</span><br><span class="line">                    NSRange ran = [xiaoshuStr rangeOfString:@&quot;.&quot;];</span><br><span class="line">                    if (range.location - ran.location &lt;= weishu) &#123;</span><br><span class="line">                        return YES;</span><br><span class="line">                    &#125;else&#123;</span><br><span class="line">                        //                            [self showText:@&quot;亲，您最多输入两位小数&quot;];</span><br><span class="line">                        return NO;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    return YES;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;//输入的数据格式不正确</span><br><span class="line">            //                [self showText:@&quot;亲，您输入的格式不正确&quot;];</span><br><span class="line">            [xiaoshuStr stringByReplacingCharactersInRange:range withString:@&quot;&quot;];</span><br><span class="line">            return NO;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        return YES;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:49</span><br><span class="line"> *</span><br><span class="line"> *  针对输入金额的格式检查</span><br><span class="line"> *</span><br><span class="line"> *  @param NSString moneyStr</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)inputMoneyFormat:(NSString*)moneyStr&#123;</span><br><span class="line">    BOOL res = YES;</span><br><span class="line">    NSCharacterSet* tmpSet = [NSCharacterSet characterSetWithCharactersInString:@&quot;0123456789.&quot;];</span><br><span class="line">    int i = 0;</span><br><span class="line">    while (i &lt; moneyStr.length) &#123;</span><br><span class="line">        NSString * string = [moneyStr substringWithRange:NSMakeRange(i, 1)];</span><br><span class="line">        NSRange range = [string rangeOfCharacterFromSet:tmpSet];</span><br><span class="line">        if (range.length == 0) &#123;</span><br><span class="line">            res = NO;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    return res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark -------------------------密码检查----------------------------------------</span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:13</span><br><span class="line"> *</span><br><span class="line"> *  常规密码检查（6到20位大小数字）</span><br><span class="line"> *</span><br><span class="line"> *  @param BOOL passWordStr</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)passwordNormalisRight:(NSString *)passWordStr&#123;</span><br><span class="line">    NSString *passWordRegex = @&quot;^[a-zA-Z0-9]&#123;6,20&#125;+$&quot;;</span><br><span class="line">    NSPredicate *passWordPredicate = [NSPredicate predicateWithFormat:@&quot;SELF MATCHES %@&quot;,passWordRegex];</span><br><span class="line">    return [passWordPredicate evaluateWithObject:passWordStr];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:20</span><br><span class="line"> *</span><br><span class="line"> *  密码输入格式检查 ^[a-zA-Z0-9|,|.|_|!|?]&quot;</span><br><span class="line"> *</span><br><span class="line"> *  @param String passwordInputStr</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)inputPasswordisRight:(NSString*)passwordInputStr&#123;</span><br><span class="line">    BOOL res = YES;</span><br><span class="line">    NSString *passWordRegex = @&quot;^[a-zA-Z0-9|,|.|_|!|?]&quot;;</span><br><span class="line">    int i = 0;</span><br><span class="line">    while (i &lt; passwordInputStr.length) &#123;</span><br><span class="line">        NSString * stringsub = [passwordInputStr substringWithRange:NSMakeRange(i, 1)];</span><br><span class="line">        NSPredicate *passWordPredicate = [NSPredicate predicateWithFormat:@&quot;SELF MATCHES %@&quot;,passWordRegex];</span><br><span class="line">        if (![passWordPredicate evaluateWithObject:stringsub]) &#123;</span><br><span class="line">            res = NO;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    return res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark -------------------------自定义格式检查----------------------------------------</span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:13</span><br><span class="line"> *</span><br><span class="line"> *  自定义符串类型检查</span><br><span class="line"> *</span><br><span class="line"> *  @param String passWordStr</span><br><span class="line"> *  @param String regix 匹配符</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)stringFormatisRight:(NSString *)string withRegix:(NSString *)regix&#123;</span><br><span class="line">    NSString *RegixFormat = regix;</span><br><span class="line">    NSPredicate *passWordPredicate = [NSPredicate predicateWithFormat:@&quot;SELF MATCHES %@&quot;,RegixFormat];</span><br><span class="line">    return [passWordPredicate evaluateWithObject:string];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 16:08:21</span><br><span class="line"> *</span><br><span class="line"> *  自定义输入格式检查</span><br><span class="line"> *</span><br><span class="line"> *  @param String inputString</span><br><span class="line"> *  @param String regix 匹配符</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+ (BOOL) inputStringFormatRight:(NSString *)inputString withRegix:(NSString *)regix&#123;</span><br><span class="line">    BOOL res = YES;</span><br><span class="line">    int i = 0;</span><br><span class="line">    while (i &lt; inputString.length) &#123;</span><br><span class="line">        NSString * stringsub = [inputString substringWithRange:NSMakeRange(i, 1)];</span><br><span class="line">        NSPredicate *passWordPredicate = [NSPredicate predicateWithFormat:@&quot;SELF MATCHES %@&quot;,regix];</span><br><span class="line">        if (![passWordPredicate evaluateWithObject:stringsub]) &#123;</span><br><span class="line">            res = NO;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    return res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark -------------------------其它格式检查----------------------------------------</span><br><span class="line">/**</span><br><span class="line"> *  @author Xiao  Huarong, 16-08-18 17:08:41</span><br><span class="line"> *</span><br><span class="line"> *  身份证号码格式检查</span><br><span class="line"> *</span><br><span class="line"> *  @param identityCard 身份证号串</span><br><span class="line"> *</span><br><span class="line"> *  @return BOOL</span><br><span class="line"> */</span><br><span class="line">+ (BOOL)checkIDCard:(NSString *)value &#123;</span><br><span class="line">    value = [value stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];</span><br><span class="line">    NSInteger length =0;</span><br><span class="line">    if (!value) &#123;</span><br><span class="line">        return NO;</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">        length = [value length];</span><br><span class="line">        if (length !=15 &amp;&amp; length !=18) &#123;</span><br><span class="line">            return NO;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    // 省份代码</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    NSArray *areasArray =@[@&quot;11&quot;,@&quot;12&quot;, @&quot;13&quot;,@&quot;14&quot;, @&quot;15&quot;,@&quot;21&quot;, @&quot;22&quot;,@&quot;23&quot;, @&quot;31&quot;,@&quot;32&quot;, @&quot;33&quot;,@&quot;34&quot;, @&quot;35&quot;,@&quot;36&quot;, @&quot;37&quot;,@&quot;41&quot;,@&quot;42&quot;,@&quot;43&quot;, @&quot;44&quot;,@&quot;45&quot;, @&quot;46&quot;,@&quot;50&quot;, @&quot;51&quot;,@&quot;52&quot;, @&quot;53&quot;,@&quot;54&quot;, @&quot;61&quot;,@&quot;62&quot;, @&quot;63&quot;,@&quot;64&quot;, @&quot;65&quot;,@&quot;71&quot;, @&quot;81&quot;,@&quot;82&quot;, @&quot;91&quot;];</span><br><span class="line">    </span><br><span class="line">    NSString *valueStart2 = [value substringToIndex:2];</span><br><span class="line">    BOOL areaFlag =NO;</span><br><span class="line">    for (NSString *areaCode in areasArray) &#123;</span><br><span class="line">        </span><br><span class="line">        if ([areaCode isEqualToString:valueStart2]) &#123;</span><br><span class="line">            areaFlag =YES;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    if (!areaFlag) &#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    NSRegularExpression *regularExpression;</span><br><span class="line">    NSUInteger numberofMatch;</span><br><span class="line">    int year =0;</span><br><span class="line">    switch (length) &#123;</span><br><span class="line">        case 15:</span><br><span class="line">            year = [value substringWithRange:NSMakeRange(6,2)].intValue +1900;</span><br><span class="line">            if (year %4 ==0 || (year %100 ==0 &amp;&amp; year %4 ==0)) &#123;</span><br><span class="line">                regularExpression = [[NSRegularExpression alloc]initWithPattern:@&quot;^[1-9][0-9]&#123;5&#125;[0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]&#123;3&#125;$&quot;</span><br><span class="line">                                                                        options:NSRegularExpressionCaseInsensitive</span><br><span class="line">                                                                          error:nil];//测试出生日期的合法性</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                regularExpression = [[NSRegularExpression alloc]initWithPattern:@&quot;^[1-9][0-9]&#123;5&#125;[0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]&#123;3&#125;$&quot;</span><br><span class="line">                                                                        options:NSRegularExpressionCaseInsensitive</span><br><span class="line">                                                                          error:nil];//测试出生日期的合法性</span><br><span class="line">            &#125;</span><br><span class="line">            numberofMatch = [regularExpression numberOfMatchesInString:value</span><br><span class="line">                                                               options:NSMatchingReportProgress</span><br><span class="line">                                                                 range:NSMakeRange(0, value.length)];</span><br><span class="line">            if(numberofMatch &gt;0) &#123;</span><br><span class="line">                return YES;</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                return NO;</span><br><span class="line">            &#125;</span><br><span class="line">        case 18:</span><br><span class="line">            year = [value substringWithRange:NSMakeRange(6,4)].intValue;</span><br><span class="line"></span><br><span class="line">            if (year %4 ==0 || (year %100 ==0 &amp;&amp; year %4 ==0)) &#123;</span><br><span class="line">                </span><br><span class="line">                regularExpression = [[NSRegularExpression alloc]initWithPattern:@&quot;^[1-9][0-9]&#123;5&#125;19[0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]&#123;3&#125;[0-9Xx]$&quot;</span><br><span class="line">                                     </span><br><span class="line">                                                                        options:NSRegularExpressionCaseInsensitive</span><br><span class="line">                                     </span><br><span class="line">                                     </span><br><span class="line">                                     </span><br><span class="line">                                                                          error:nil];//测试出生日期的合法性</span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">                regularExpression = [[NSRegularExpression alloc]initWithPattern:@&quot;^[1-9][0-9]&#123;5&#125;19[0-9]&#123;2&#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]&#123;3&#125;[0-9Xx]$&quot;</span><br><span class="line">                                     </span><br><span class="line">                                     </span><br><span class="line">                                     </span><br><span class="line">                                                                        options:NSRegularExpressionCaseInsensitive</span><br><span class="line">                                     </span><br><span class="line">                                     </span><br><span class="line">                                     </span><br><span class="line">                                                                          error:nil];//测试出生日期的合法性</span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            numberofMatch = [regularExpression numberOfMatchesInString:value</span><br><span class="line">                             </span><br><span class="line">                             </span><br><span class="line">                             </span><br><span class="line">                                                               options:NSMatchingReportProgress</span><br><span class="line">                             </span><br><span class="line">                             </span><br><span class="line">                             </span><br><span class="line">                                                                 range:NSMakeRange(0, value.length)];</span><br><span class="line">            </span><br><span class="line">            if(numberofMatch &gt;0) &#123;</span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">                </span><br><span class="line">                int S = ([value substringWithRange:NSMakeRange(0,1)].intValue + [value substringWithRange:NSMakeRange(10,1)].intValue) *7 + ([value substringWithRange:NSMakeRange(1,1)].intValue + [value substringWithRange:NSMakeRange(11,1)].intValue) *9 + ([value substringWithRange:NSMakeRange(2,1)].intValue + [value substringWithRange:NSMakeRange(12,1)].intValue) *10 + ([value substringWithRange:NSMakeRange(3,1)].intValue + [value substringWithRange:NSMakeRange(13,1)].intValue) *5 + ([value substringWithRange:NSMakeRange(4,1)].intValue + [value substringWithRange:NSMakeRange(14,1)].intValue) *8 + ([value substringWithRange:NSMakeRange(5,1)].intValue + [value substringWithRange:NSMakeRange(15,1)].intValue) *4 + ([value substringWithRange:NSMakeRange(6,1)].intValue + [value substringWithRange:NSMakeRange(16,1)].intValue) *2 + [value substringWithRange:NSMakeRange(7,1)].intValue *1 + [value substringWithRange:NSMakeRange(8,1)].intValue *6 + [value substringWithRange:NSMakeRange(9,1)].intValue *3;</span><br><span class="line"></span><br><span class="line">                int Y = S %11;</span><br><span class="line"></span><br><span class="line">                NSString *M =@&quot;F&quot;;</span><br><span class="line"></span><br><span class="line">                NSString *JYM =@&quot;10X98765432&quot;;</span><br><span class="line"></span><br><span class="line">                M = [JYM substringWithRange:NSMakeRange(Y,1)];// 判断校验位</span><br><span class="line"></span><br><span class="line">                if ([M isEqualToString:[value substringWithRange:NSMakeRange(17,1)]]) &#123;</span><br><span class="line"></span><br><span class="line">                    return YES;// 检测ID的校验位</span><br><span class="line"> </span><br><span class="line">                &#125;else &#123;</span><br><span class="line"></span><br><span class="line">                    return NO;</span><br><span class="line"> </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;else &#123;</span><br><span class="line"></span><br><span class="line">                return NO;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        default:</span><br><span class="line"></span><br><span class="line">            return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> *  @brief 邮箱格式检查</span><br><span class="line"> *  @param String mailStr</span><br><span class="line"> *  </span><br><span class="line"> *  return BOOL</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">+(BOOL)mailValidateIsRight:(NSString *)mailStr&#123;</span><br><span class="line">    NSString *emailRegex = @&quot;[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]&#123;2,4&#125;&quot;;</span><br><span class="line">    NSPredicate *emailTest = [NSPredicate predicateWithFormat:@&quot;SELF MATCHES %@&quot;, emailRegex];</span><br><span class="line">    return [emailTest evaluateWithObject:mailStr];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+(NSString *)DateWidthFormat:(NSString *)formatStr dateConfig:(NSDate *)date&#123;</span><br><span class="line">    NSDateFormatter *format = [[NSDateFormatter alloc]init];</span><br><span class="line">    [format setDateFormat:formatStr];</span><br><span class="line">    return [format stringFromDate:date];</span><br><span class="line">&#125;</span><br><span class="line">+(NSString *)DateWidthFormat:(NSString *)formatStr timeInterValeConfig:(double)timeTamp&#123;</span><br><span class="line">    NSDate *date = [NSDate dateWithTimeIntervalSince1970:timeTamp];</span><br><span class="line">    </span><br><span class="line">    NSDateFormatter *format = [[NSDateFormatter alloc]init];</span><br><span class="line">    [format setDateFormat:formatStr];</span><br><span class="line">    return [format stringFromDate:date];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(NSString *)DateStrFromDate:(NSDate *)date&#123;</span><br><span class="line">    NSTimeInterval interval = [date timeIntervalSince1970] * 1000;</span><br><span class="line">    NSString *timeTramp = [NSString stringWithFormat:@&quot;%ld&quot;,(long)interval];</span><br><span class="line">    return timeTramp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;tags&quot;&gt;&lt;a href=&quot;#tags&quot; class=&quot;headerlink&quot; title=&quot;tags:&quot;&gt;&lt;/a&gt;tags:&lt;/h2&gt;&lt;p&gt;要点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在textField或者TextView进行输入时一般会进行输入时检查&lt;/li&gt;
&lt;l</summary>
      
    
    
    
    <category term="苹果开发" scheme="http://yoursite.com/categories/苹果开发/"/>
    
    
    <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>OC项目开发常用宏定义</title>
    <link href="http://yoursite.com/2019/03/06/OC%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%AE%8F%E5%AE%9A%E4%B9%89/"/>
    <id>http://yoursite.com/2019/03/06/OC%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%AE%8F%E5%AE%9A%E4%B9%89/</id>
    <published>2019-03-06T09:40:09.000Z</published>
    <updated>2021-01-09T09:44:26.700Z</updated>
    
    <content type="html"><![CDATA[<hr><p>tags:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#define WS(weakSelf)  __weak __typeof(self)weakSelf = self; //__typeof() 声明数据类型</span><br><span class="line">#define DEF [NSUserDefaults standardUserDefaults]</span><br><span class="line"></span><br><span class="line">//屏幕适配 间距设置</span><br><span class="line">#define HORIZ_5 AUTO_WIDTH(5)</span><br><span class="line">#define HORIZ_10 AUTO_WIDTH(10)</span><br><span class="line">#define VERTICAL_5  AUTO_HIGHT(5)</span><br><span class="line">#define VERTICAL_10  AUTO_HIGHT(10)</span><br><span class="line"></span><br><span class="line">//指定某设计图尺寸确定高度或指按屏幕比例放缩</span><br><span class="line">#define IMGHEIGHT_720(x) (x/720.0f*Main_Screen_Width)</span><br><span class="line">//#deine IMGHEIGHT(x)(y) (y/x*AUTO_WIDTH(x))</span><br><span class="line"></span><br><span class="line">//设备尺寸</span><br><span class="line">#define iphone4x_3_5 ([UIScreen mainScreen].bounds.size.height==480.0f)</span><br><span class="line">#define iphone5x_4_0 ([UIScreen mainScreen].bounds.size.height==568.0f)</span><br><span class="line">#define iphone6_4_7 ([UIScreen mainScreen].bounds.size.height==667.0f)</span><br><span class="line">#define iphone6Plus_5_5 ([UIScreen mainScreen].bounds.size.height==736.0f || [UIScreen mainScreen].bounds.size.height==414.0f)</span><br><span class="line">#define IMAGEINDEX Main_Screen_Width / 720.0f</span><br><span class="line"></span><br><span class="line">//应用框架尺寸</span><br><span class="line">#define  NAVHEIGHT 64</span><br><span class="line">#define TABBARHEIGHT 40</span><br><span class="line"></span><br><span class="line">//app 尺寸宏定义</span><br><span class="line">#define Main_Screen_Height [[UIScreen mainScreen] bounds].size.height //主屏幕的高度</span><br><span class="line">#define Main_Screen_Width  [[UIScreen mainScreen] bounds].size.width  //主屏幕的宽度</span><br><span class="line">/*** KeyWindow Height Width */</span><br><span class="line">#define KeyWindow_Height [[[UIApplication sharedApplication] keyWindow] frame].size.height //KeyWindow的高度</span><br><span class="line">#define KeyWindow_Width  [[[[UIApplication sharedApplication] keyWindow] frame].size..width  //KeyWindow的宽度</span><br><span class="line">#define AUTO_WIDTH(number)   (number) / 375.0 *  CGRectGetWidth([UIScreen mainScreen].bounds)</span><br><span class="line">#define AUTO_HIGHT(number)   (number) / 667.0 *  CGRectGetHeight([UIScreen mainScreen].bounds)</span><br><span class="line"></span><br><span class="line">#define AUTO_WIDTH1080(number)   (number) / 540.0 *  CGRectGetWidth([UIScreen mainScreen].bounds)</span><br><span class="line">#define AUTO_HIGHT1920(number)   (number) / 960.0 *  CGRectGetHeight([UIScreen mainScreen].bounds)</span><br><span class="line">//当前版本</span><br><span class="line">#define FSystenVersion            ([[[UIDevice currentDevice] systemVersion] floatValue])</span><br><span class="line">#define AppVersion              ([[[NSBundle mainBundle] objectForInfoDictionaryKey:@&quot;CFBundleShortVersionString&quot;] floatValue])</span><br><span class="line"></span><br><span class="line">// 字符串去空格</span><br><span class="line">#define strTrimming(x) [x stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]]</span><br></pre></td></tr></table></figure></p><p>#颜色字号定义<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">#define COLORWITHRGB(r,g,b,a) [UIColor colorWithRed:r/255.0 green:g/255.0 blue:b/255.0 alpha:a]</span><br><span class="line">//主题色</span><br><span class="line">#define STATUS_BAR_COLOR [UIColor colorWithRed:255/255.0 green:56/255.0 blue:61/255.0 alpha:1]</span><br><span class="line">//#define TINY_COCLOR [UIColor colorWithRed:244/255.0 green:120/255.0 blue:0/255.0 alpha:1]</span><br><span class="line">#define TINY_COCLOR [UIColor colorWithRed:255/255.0 green:56/255.0 blue:61/255.0 alpha:1]</span><br><span class="line">#define TINY_LIGHT_COLOR UIColorFromRGB(0xff9b9e)</span><br><span class="line"></span><br><span class="line">#define BACKGROUNDCOLOR [UIColor colorWithRed:243/255.0 green:243/255.0 blue:243/255.0 alpha:1]</span><br><span class="line"></span><br><span class="line">#define RGBCOLOR(r,g,b) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1]</span><br><span class="line">#define RGBACOLOR(r,g,b,a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:(a)]</span><br><span class="line">#define ARC_COLOR RGBCOLOR(arc4random()%255, arc4random()%255, arc4random()%255)</span><br><span class="line">#define KdarkGayColor RGBCOLOR(50, 50, 50)//深灰</span><br><span class="line">#define KlightGayColor  RGBCOLOR(220, 220,220)//浅灰</span><br><span class="line">#define KtextGayColor UIColorFromRGB(0x616161)</span><br><span class="line">#define darkf4 UIColorFromRGB(0xf4f4f4)</span><br><span class="line">#define dark444 UIColorFromRGB(0x444444)</span><br><span class="line">#define dark999 UIColorFromRGB(0x999999)</span><br><span class="line">#define dark666 UIColorFromRGB(0x666666)</span><br><span class="line">#define darkf3f UIColorFromRGB(0xf3f3f3)</span><br><span class="line"></span><br><span class="line">#define FONT(x) [UIFont systemFontOfSize:x]</span><br><span class="line">#define FONT_B(x) [UIFont boldSystemFontOfSize:x]</span><br><span class="line"></span><br><span class="line">#define FONT_10   [UIFont systemFontOfSize:10]</span><br><span class="line">#define FONT_10_B [UIFont boldSystemFontOfSize:10]</span><br><span class="line"></span><br><span class="line">#define FONT_12   [UIFont systemFontOfSize:12]</span><br><span class="line">#define FONT_12_B [UIFont boldSystemFontOfSize:12]</span><br><span class="line"></span><br><span class="line">#define FONT_14   [UIFont systemFontOfSize:14]</span><br><span class="line">#define FONT_14_B [UIFont boldSystemFontOfSize:14]</span><br><span class="line"></span><br><span class="line">#define FONT_16   [UIFont systemFontOfSize:16]</span><br><span class="line">#define FONT_16_B [UIFont boldSystemFontOfSize:16]</span><br><span class="line"></span><br><span class="line">#define FONT_18   [UIFont systemFontOfSize:18]</span><br><span class="line">#define FONT_18_B [UIFont boldSystemFontOfSize:18]</span><br><span class="line">//适配字体</span><br><span class="line">#define SizeScale ((KeyWindow_Height &gt; 568) ? KeyWindow_Height/568 : 1)</span><br><span class="line">#define FONTNEW(x) [UIFont systemFontOfSize:x * SizeScale]</span><br><span class="line">#define FONTNEW_B(x) [UIFont boldSystemFontOfSize:x *SizeScale]</span><br><span class="line"></span><br><span class="line">#define FONTNEW_10   FONTNEW(10)</span><br><span class="line">#define FONTNEW_10_B FONTNEW_B(10)</span><br><span class="line"></span><br><span class="line">#define FONTNEW_12   FONTNEW(12)</span><br><span class="line">#define FONTNEW_12_B FONTNEW_B(12)</span><br><span class="line"></span><br><span class="line">#define FONTNEW_14   FONTNEW(14)</span><br><span class="line">#define FONTNEW_14_B FONTNEW_B(14)</span><br><span class="line"></span><br><span class="line">#define FONTNEW_16   FONTNEW(16)</span><br><span class="line">#define FONTNEW_16_B FONTNEW_B(16)</span><br><span class="line"></span><br><span class="line">#define FONTNEW_18   FONTNEW(18)</span><br><span class="line">#define FONTNEW_18_B FONTNEW_B(18)</span><br><span class="line"></span><br><span class="line">#define SizeScale1920 ((KeyWindow_Height &gt; 960) ? KeyWindow_Height/960 : 1)</span><br><span class="line">#define FONTNEW1080(x) if(iphone6Plus_5_5)&#123;return [UIFont systemFontOfSize:x * 1.15 / 3];&#125;</span><br><span class="line">#define FONTNEW_B1920(x) [UIFont boldSystemFontOfSize:x *SizeScale]</span><br><span class="line"></span><br><span class="line">//RGB颜色转换（16进制-&gt;10进制）</span><br><span class="line">#define UIColorFromRGB(rgbValue)    [UIColor colorWithRed:((float)((rgbValue &amp; 0xFF0000) &gt;&gt; 16))/255.0 green:((float)((rgbValue &amp; 0xFF00) &gt;&gt; 8))/255.0 blue:((float)(rgbValue &amp; 0xFF))/255.0 alpha:1.0]</span><br><span class="line"></span><br><span class="line">#define lightgrayColor  UIColorFromRGB(0xe8e8e8)</span><br><span class="line">#define mostlightgrayColor  UIColorFromRGB(0xf3f3f3)</span><br><span class="line">#define slivergrayColor  UIColorFromRGB(0xc0c0c0)</span><br><span class="line">#define darkgrayColor  UIColorFromRGB(0x444444)</span><br><span class="line">#define mostdarkgrayColor  UIColorFromRGB(0x999999)</span><br><span class="line">#define darkmiddleColor UIColorFromRGB(0x666666)</span><br><span class="line">#define bluemiddleColor UIColorFromRGB(0x00a0ec)</span><br><span class="line">#define grayCCCCC UIColorFromRGB(0xcccccc)</span><br><span class="line"></span><br><span class="line">#define LOADIMAGE(file) [[UIImage imageWithContentsOfFile:[[NSBundle mainBundle]pathForResource:file ofType:@&quot;png&quot;]] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal]</span><br><span class="line">#define LOADIMAGECACHES(file) [UIImage imageNamed:file]</span><br><span class="line">#define PLACEHOLDER_IMAGE    LOADIMAGECACHES(@&quot;duoduo_gray&quot;)</span><br><span class="line"></span><br><span class="line">#endif</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;tags:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa</summary>
      
    
    
    
    <category term="苹果开发" scheme="http://yoursite.com/categories/苹果开发/"/>
    
    
    <category term="OC" scheme="http://yoursite.com/tags/OC/"/>
    
  </entry>
  
</feed>
